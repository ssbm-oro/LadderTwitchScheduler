@page "/ladderschedule"
@using System.Net.Http
@using System.Net.Http.Json
@using System.Text.Json
@using System.Text.Json.Serialization;
@using System.Net.Http.Headers
@inject LadderClient Ladder
@using LadderTwitchScheduler.Components
@inject TwitchClient twitchClient
@inject NavigationManager NavigationManager

<h1>Ladder Schedule</h1>



@if (schedule == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Race Mode</th>
                <th>Race Name</th>
                <th>Start Time</th>
                @if (twitchClient.access_token != string.Empty)
                {
                <th>Add to Schedule</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var scheduleItem in schedule)
            {
                @* <tr>
                    <td>@scheduleItem.Mode</td>
                    <td>@scheduleItem.RaceName</td>
                    <td>@scheduleItem.StartTime</td>
                    <td><button @onclick="AddToSchedule">Add to Schedule</button></td>
                </tr> *@
                <LadderScheduleItem ScheduleItem="@scheduleItem"/>
            }
        </tbody>
    </table>
}

@code {
    private Schedule schedule;


    protected override async Task OnInitializedAsync()
    {
        Season[] seasons = await Ladder.GetSeasonsAsync();
        Season currentSeason = seasons.Where(x => x.IsCurrentSeason).First<Season>();

        if (currentSeason != null)
        {
            schedule = await Ladder.GetScheduleAsync(currentSeason.season_id);
        }
    }
}
